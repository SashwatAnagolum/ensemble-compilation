# deterministic inputs
num_circuits = 1024;
num_measurement_bases = 1024;
num_qubits = 4;
 

# values passed in during circuit sampling
global circuit_index;

# precomputed values before circuit sampling
pauli_measurement_shifts = [
	["I"], ["H"], ["S", "H"], ["X"], ["H", "X"], ["S", "H", "X"]
];


# random variables sampled every time we sample a circuit
measurement_basis_indices = int_uniform(low=0, high=6, size=(2, num_qubits));

# qubits and classical bits
qubit qubits[num_qubits];
bit bits[num_qubits];

# circuit description - GHZ-4
for (i = 0; i < num_qubits; i++) {
	@inverse gate1q pauli_measurement_shifts[measurement_basis_indices[0][i]] qubits[i];
}

gate1q "H" qubits[0];

for (i = 0; i < num_qubits - 1; i++) {
	gate2q "CX" qubits[i], qubits[i + 1];
}

for (i = 0; i < num_qubits; i++) {
	gate1q pauli_measurement_shifts[measurement_basis_indices[1][i]] qubits[i];
}

for (i = 0; i < num_qubits; i++) {
	measure qubits[i], bits[i];
}